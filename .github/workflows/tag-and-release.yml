name: Desktop

on:
  push:
    branches:
      - main

jobs:
  tag-new-versions:
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.maybe-release.outputs.id }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Detect and Tag New Version
        id: maybe-tag
        uses: salsify/action-detect-and-tag-new-version@v2
      - name: Create Release
        id: maybe-release
        if: ${{ success() && steps.maybe-tag.outputs.tag }}
        uses: softprops/action-gh-release@v1
        with: 
          name: ${{ steps.maybe-tag.outputs.tag }}
          tag_name: ${{ steps.maybe-tag.outputs.tag }}
          draft: true
          files: |
            LICENSE
        
  release:
    needs: tag-new-versions
    if: ${{ success() && needs.tag-new-versions.outputs.id }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # os: [macos-latest, ubuntu-latest, windows-latest]
        os: [macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install and build
        run: |
          yarn install
          yarn build

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          CSC_LINK: ${{ secrets.MAC_CERTS }}
          CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTS_PASSWORD }}
          # This is used for uploading release assets to github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm exec electron-builder -- --publish always --win --mac --linux